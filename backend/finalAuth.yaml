Resources:
  rescueCentreAPID8DB9A2C:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: rescueCentreAPI
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Resource
  rescueCentreAPICloudWatchRole1D7B36DD:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/CloudWatchRole/Resource
  rescueCentreAPIAccount7084DBEC:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn:
        Fn::GetAtt:
          - rescueCentreAPICloudWatchRole1D7B36DD
          - Arn
    DependsOn:
      - rescueCentreAPID8DB9A2C
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Account
  rescueCentreAPIDeployment45E3B327c4e39c8addeb043c256cf844e5d64512:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId:
        Ref: rescueCentreAPID8DB9A2C
      Description: Automatically created by the RestApi construct
    DependsOn:
      - rescueCentreAPIhorsesDELETEA348A4C3
      - rescueCentreAPIhorsesGETB7DAC6B1
      - rescueCentreAPIhorsesOPTIONS7DED52D4
      - rescueCentreAPIhorsesPOST9B260AD7
      - rescueCentreAPIhorsesPUT993486A2
      - rescueCentreAPIhorsesC64FD68A
      - rescueCentreAPIOPTIONS56285205
      - rescueCentreAPIqueriesDELETEED1AA124
      - rescueCentreAPIqueriesGETC5D419CF
      - rescueCentreAPIqueriesOPTIONSC0B68791
      - rescueCentreAPIqueriesPOST989F85C7
      - rescueCentreAPIqueriesF460DB13
      - rescueCentreAPIrehomersDELETEB301962B
      - rescueCentreAPIrehomersGETAE24A896
      - rescueCentreAPIrehomersOPTIONS14C5AEDF
      - rescueCentreAPIrehomersPOST8A9373DD
      - rescueCentreAPIrehomersPUT30D5E0D8
      - rescueCentreAPIrehomers3DD82C26
      - rescueCentreAPIvolunteersDELETE6600AA6E
      - rescueCentreAPIvolunteersGET2E630DE3
      - rescueCentreAPIvolunteersOPTIONSA498F13A
      - rescueCentreAPIvolunteersPOST93BE39AB
      - rescueCentreAPIvolunteersPUT39E77AE4
      - rescueCentreAPIvolunteers92C3BD90
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Deployment/Resource
  rescueCentreAPIDeploymentStageprodF4DDB93C:
    Type: AWS::ApiGateway::Stage
    Properties:
      RestApiId:
        Ref: rescueCentreAPID8DB9A2C
      DeploymentId:
        Ref: rescueCentreAPIDeployment45E3B327c4e39c8addeb043c256cf844e5d64512
      StageName: prod
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/DeploymentStage.prod/Resource
  rescueCentreAPIOPTIONS56285205:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Fn::GetAtt:
          - rescueCentreAPID8DB9A2C
          - RootResourceId
      RestApiId:
        Ref: rescueCentreAPID8DB9A2C
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'GET,POST,OPTIONS'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/OPTIONS/Resource
  rescueCentreAPIrehomers3DD82C26:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - rescueCentreAPID8DB9A2C
          - RootResourceId
      PathPart: rehomers
      RestApiId:
        Ref: rescueCentreAPID8DB9A2C
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/rehomers/Resource
  rescueCentreAPIrehomersOPTIONS14C5AEDF:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: rescueCentreAPIrehomers3DD82C26
      RestApiId:
        Ref: rescueCentreAPID8DB9A2C
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'GET,POST,OPTIONS'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/rehomers/OPTIONS/Resource
  rescueCentreAPIrehomersPOSTApiPermissionbackendrescueCentreAPIFF37939BPOSTrehomers242826B3:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - rehomersPOSTCCF9244E
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: rescueCentreAPID8DB9A2C
            - /
            - Ref: rescueCentreAPIDeploymentStageprodF4DDB93C
            - /POST/rehomers
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/rehomers/POST/ApiPermission.backendrescueCentreAPIFF37939B.POST..rehomers
  rescueCentreAPIrehomersPOSTApiPermissionTestbackendrescueCentreAPIFF37939BPOSTrehomersCDBC23CC:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - rehomersPOSTCCF9244E
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: rescueCentreAPID8DB9A2C
            - /test-invoke-stage/POST/rehomers
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/rehomers/POST/ApiPermission.Test.backendrescueCentreAPIFF37939B.POST..rehomers
  rescueCentreAPIrehomersPOST8A9373DD:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      ResourceId:
        Ref: rescueCentreAPIrehomers3DD82C26
      RestApiId:
        Ref: rescueCentreAPID8DB9A2C
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - rehomersPOSTCCF9244E
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/rehomers/POST/Resource
  rescueCentreAPIrehomersPUTApiPermissionbackendrescueCentreAPIFF37939BPUTrehomers5EBDDEDB:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - rehomersPUT3BC9B05D
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: rescueCentreAPID8DB9A2C
            - /
            - Ref: rescueCentreAPIDeploymentStageprodF4DDB93C
            - /PUT/rehomers
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/rehomers/PUT/ApiPermission.backendrescueCentreAPIFF37939B.PUT..rehomers
  rescueCentreAPIrehomersPUTApiPermissionTestbackendrescueCentreAPIFF37939BPUTrehomers829FEBD2:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - rehomersPUT3BC9B05D
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: rescueCentreAPID8DB9A2C
            - /test-invoke-stage/PUT/rehomers
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/rehomers/PUT/ApiPermission.Test.backendrescueCentreAPIFF37939B.PUT..rehomers
  rescueCentreAPIrehomersPUT30D5E0D8:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: PUT
      ResourceId:
        Ref: rescueCentreAPIrehomers3DD82C26
      RestApiId:
        Ref: rescueCentreAPID8DB9A2C
      AuthorizationScopes:
        - openid
        - profile
        - email
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId: 
        Ref: "adminSectionAuth"
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - rehomersPUT3BC9B05D
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/rehomers/PUT/Resource
  rescueCentreAPIrehomersDELETEApiPermissionbackendrescueCentreAPIFF37939BDELETErehomers89B18554:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - rehomersDELETE46F353DF
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: rescueCentreAPID8DB9A2C
            - /
            - Ref: rescueCentreAPIDeploymentStageprodF4DDB93C
            - /DELETE/rehomers
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/rehomers/DELETE/ApiPermission.backendrescueCentreAPIFF37939B.DELETE..rehomers
  rescueCentreAPIrehomersDELETEApiPermissionTestbackendrescueCentreAPIFF37939BDELETErehomersC68D026C:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - rehomersDELETE46F353DF
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: rescueCentreAPID8DB9A2C
            - /test-invoke-stage/DELETE/rehomers
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/rehomers/DELETE/ApiPermission.Test.backendrescueCentreAPIFF37939B.DELETE..rehomers
  rescueCentreAPIrehomersDELETEB301962B:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: DELETE
      ResourceId:
        Ref: rescueCentreAPIrehomers3DD82C26
      RestApiId:
        Ref: rescueCentreAPID8DB9A2C
      AuthorizationScopes:
        - openid
        - profile
        - email
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId: 
        Ref: "adminSectionAuth"
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - rehomersDELETE46F353DF
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/rehomers/DELETE/Resource
  rescueCentreAPIrehomersGETApiPermissionbackendrescueCentreAPIFF37939BGETrehomersE5AC8689:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - rehomersGETD6E52D67
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: rescueCentreAPID8DB9A2C
            - /
            - Ref: rescueCentreAPIDeploymentStageprodF4DDB93C
            - /GET/rehomers
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/rehomers/GET/ApiPermission.backendrescueCentreAPIFF37939B.GET..rehomers
  rescueCentreAPIrehomersGETApiPermissionTestbackendrescueCentreAPIFF37939BGETrehomers5C7CF26F:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - rehomersGETD6E52D67
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: rescueCentreAPID8DB9A2C
            - /test-invoke-stage/GET/rehomers
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/rehomers/GET/ApiPermission.Test.backendrescueCentreAPIFF37939B.GET..rehomers
  rescueCentreAPIrehomersGETAE24A896:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: rescueCentreAPIrehomers3DD82C26
      RestApiId:
        Ref: rescueCentreAPID8DB9A2C
      AuthorizationScopes:
        - openid
        - profile
        - email
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId: 
        Ref: "adminSectionAuth"
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - rehomersGETD6E52D67
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/rehomers/GET/Resource
  rescueCentreAPIhorsesC64FD68A:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - rescueCentreAPID8DB9A2C
          - RootResourceId
      PathPart: horses
      RestApiId:
        Ref: rescueCentreAPID8DB9A2C
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/horses/Resource
  rescueCentreAPIhorsesOPTIONS7DED52D4:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: rescueCentreAPIhorsesC64FD68A
      RestApiId:
        Ref: rescueCentreAPID8DB9A2C
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'GET,POST,OPTIONS'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/horses/OPTIONS/Resource
  rescueCentreAPIhorsesPOSTApiPermissionbackendrescueCentreAPIFF37939BPOSThorses11D92F22:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - horsesPOST4A799E97
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: rescueCentreAPID8DB9A2C
            - /
            - Ref: rescueCentreAPIDeploymentStageprodF4DDB93C
            - /POST/horses
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/horses/POST/ApiPermission.backendrescueCentreAPIFF37939B.POST..horses
  rescueCentreAPIhorsesPOSTApiPermissionTestbackendrescueCentreAPIFF37939BPOSThorses7BC94A37:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - horsesPOST4A799E97
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: rescueCentreAPID8DB9A2C
            - /test-invoke-stage/POST/horses
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/horses/POST/ApiPermission.Test.backendrescueCentreAPIFF37939B.POST..horses
  rescueCentreAPIhorsesPOST9B260AD7:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      ResourceId:
        Ref: rescueCentreAPIhorsesC64FD68A
      RestApiId:
        Ref: rescueCentreAPID8DB9A2C
      AuthorizationScopes:
        - openid
        - profile
        - email
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId: 
        Ref: "adminSectionAuth"
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - horsesPOST4A799E97
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/horses/POST/Resource
  rescueCentreAPIhorsesPUTApiPermissionbackendrescueCentreAPIFF37939BPUThorses7A718E31:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - horsesPUT1D522FB2
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: rescueCentreAPID8DB9A2C
            - /
            - Ref: rescueCentreAPIDeploymentStageprodF4DDB93C
            - /PUT/horses
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/horses/PUT/ApiPermission.backendrescueCentreAPIFF37939B.PUT..horses
  rescueCentreAPIhorsesPUTApiPermissionTestbackendrescueCentreAPIFF37939BPUThorsesD50222E1:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - horsesPUT1D522FB2
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: rescueCentreAPID8DB9A2C
            - /test-invoke-stage/PUT/horses
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/horses/PUT/ApiPermission.Test.backendrescueCentreAPIFF37939B.PUT..horses
  rescueCentreAPIhorsesPUT993486A2:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: PUT
      ResourceId:
        Ref: rescueCentreAPIhorsesC64FD68A
      RestApiId:
        Ref: rescueCentreAPID8DB9A2C
      AuthorizationScopes:
        - openid
        - profile
        - email
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId: 
        Ref: "adminSectionAuth"
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - horsesPUT1D522FB2
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/horses/PUT/Resource
  rescueCentreAPIhorsesDELETEApiPermissionbackendrescueCentreAPIFF37939BDELETEhorses26CA5D2B:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - horsesDELETEA60F3F3A
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: rescueCentreAPID8DB9A2C
            - /
            - Ref: rescueCentreAPIDeploymentStageprodF4DDB93C
            - /DELETE/horses
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/horses/DELETE/ApiPermission.backendrescueCentreAPIFF37939B.DELETE..horses
  rescueCentreAPIhorsesDELETEApiPermissionTestbackendrescueCentreAPIFF37939BDELETEhorses838E4FB4:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - horsesDELETEA60F3F3A
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: rescueCentreAPID8DB9A2C
            - /test-invoke-stage/DELETE/horses
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/horses/DELETE/ApiPermission.Test.backendrescueCentreAPIFF37939B.DELETE..horses
  rescueCentreAPIhorsesDELETEA348A4C3:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: DELETE
      ResourceId:
        Ref: rescueCentreAPIhorsesC64FD68A
      RestApiId:
        Ref: rescueCentreAPID8DB9A2C
      AuthorizationScopes:
        - openid
        - profile
        - email
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId: 
        Ref: "adminSectionAuth"
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - horsesDELETEA60F3F3A
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/horses/DELETE/Resource
  rescueCentreAPIhorsesGETApiPermissionbackendrescueCentreAPIFF37939BGEThorsesB82290A5:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - horsesGET643349E1
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: rescueCentreAPID8DB9A2C
            - /
            - Ref: rescueCentreAPIDeploymentStageprodF4DDB93C
            - /GET/horses
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/horses/GET/ApiPermission.backendrescueCentreAPIFF37939B.GET..horses
  rescueCentreAPIhorsesGETApiPermissionTestbackendrescueCentreAPIFF37939BGEThorses6BC40FBD:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - horsesGET643349E1
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: rescueCentreAPID8DB9A2C
            - /test-invoke-stage/GET/horses
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/horses/GET/ApiPermission.Test.backendrescueCentreAPIFF37939B.GET..horses
  rescueCentreAPIhorsesGETB7DAC6B1:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: rescueCentreAPIhorsesC64FD68A
      RestApiId:
        Ref: rescueCentreAPID8DB9A2C
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - horsesGET643349E1
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/horses/GET/Resource
  rescueCentreAPIqueriesF460DB13:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - rescueCentreAPID8DB9A2C
          - RootResourceId
      PathPart: queries
      RestApiId:
        Ref: rescueCentreAPID8DB9A2C
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/queries/Resource
  rescueCentreAPIqueriesOPTIONSC0B68791:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: rescueCentreAPIqueriesF460DB13
      RestApiId:
        Ref: rescueCentreAPID8DB9A2C
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'GET,POST,OPTIONS'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/queries/OPTIONS/Resource
  rescueCentreAPIqueriesPOSTApiPermissionbackendrescueCentreAPIFF37939BPOSTqueries002A4A9D:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - queriesPOSTBFAE976B
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: rescueCentreAPID8DB9A2C
            - /
            - Ref: rescueCentreAPIDeploymentStageprodF4DDB93C
            - /POST/queries
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/queries/POST/ApiPermission.backendrescueCentreAPIFF37939B.POST..queries
  rescueCentreAPIqueriesPOSTApiPermissionTestbackendrescueCentreAPIFF37939BPOSTqueries4B73B910:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - queriesPOSTBFAE976B
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: rescueCentreAPID8DB9A2C
            - /test-invoke-stage/POST/queries
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/queries/POST/ApiPermission.Test.backendrescueCentreAPIFF37939B.POST..queries
  rescueCentreAPIqueriesPOST989F85C7:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      ResourceId:
        Ref: rescueCentreAPIqueriesF460DB13
      RestApiId:
        Ref: rescueCentreAPID8DB9A2C
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - queriesPOSTBFAE976B
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/queries/POST/Resource
  rescueCentreAPIqueriesDELETEApiPermissionbackendrescueCentreAPIFF37939BDELETEqueriesCE52C0AA:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - queriesDELETE502B0FFA
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: rescueCentreAPID8DB9A2C
            - /
            - Ref: rescueCentreAPIDeploymentStageprodF4DDB93C
            - /DELETE/queries
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/queries/DELETE/ApiPermission.backendrescueCentreAPIFF37939B.DELETE..queries
  rescueCentreAPIqueriesDELETEApiPermissionTestbackendrescueCentreAPIFF37939BDELETEqueries59B2571A:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - queriesDELETE502B0FFA
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: rescueCentreAPID8DB9A2C
            - /test-invoke-stage/DELETE/queries
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/queries/DELETE/ApiPermission.Test.backendrescueCentreAPIFF37939B.DELETE..queries
  rescueCentreAPIqueriesDELETEED1AA124:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: DELETE
      ResourceId:
        Ref: rescueCentreAPIqueriesF460DB13
      RestApiId:
        Ref: rescueCentreAPID8DB9A2C
      AuthorizationScopes:
        - openid
        - profile
        - email
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId: 
        Ref: "adminSectionAuth"
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - queriesDELETE502B0FFA
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/queries/DELETE/Resource
  rescueCentreAPIqueriesGETApiPermissionbackendrescueCentreAPIFF37939BGETqueriesB9A538F9:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - queriesGET9BCD2530
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: rescueCentreAPID8DB9A2C
            - /
            - Ref: rescueCentreAPIDeploymentStageprodF4DDB93C
            - /GET/queries
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/queries/GET/ApiPermission.backendrescueCentreAPIFF37939B.GET..queries
  rescueCentreAPIqueriesGETApiPermissionTestbackendrescueCentreAPIFF37939BGETqueries80AEBBDC:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - queriesGET9BCD2530
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: rescueCentreAPID8DB9A2C
            - /test-invoke-stage/GET/queries
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/queries/GET/ApiPermission.Test.backendrescueCentreAPIFF37939B.GET..queries
  rescueCentreAPIqueriesGETC5D419CF:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: rescueCentreAPIqueriesF460DB13
      RestApiId:
        Ref: rescueCentreAPID8DB9A2C
      AuthorizationScopes:
        - openid
        - profile
        - email
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId: 
        Ref: "adminSectionAuth"
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - queriesGET9BCD2530
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/queries/GET/Resource
  rescueCentreAPIvolunteers92C3BD90:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - rescueCentreAPID8DB9A2C
          - RootResourceId
      PathPart: volunteers
      RestApiId:
        Ref: rescueCentreAPID8DB9A2C
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/volunteers/Resource
  rescueCentreAPIvolunteersOPTIONSA498F13A:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: rescueCentreAPIvolunteers92C3BD90
      RestApiId:
        Ref: rescueCentreAPID8DB9A2C
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'GET,POST,OPTIONS'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/volunteers/OPTIONS/Resource
  rescueCentreAPIvolunteersPOSTApiPermissionbackendrescueCentreAPIFF37939BPOSTvolunteers170C26AE:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - volunteersPOST8E5FA4CF
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: rescueCentreAPID8DB9A2C
            - /
            - Ref: rescueCentreAPIDeploymentStageprodF4DDB93C
            - /POST/volunteers
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/volunteers/POST/ApiPermission.backendrescueCentreAPIFF37939B.POST..volunteers
  rescueCentreAPIvolunteersPOSTApiPermissionTestbackendrescueCentreAPIFF37939BPOSTvolunteers6F0434BA:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - volunteersPOST8E5FA4CF
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: rescueCentreAPID8DB9A2C
            - /test-invoke-stage/POST/volunteers
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/volunteers/POST/ApiPermission.Test.backendrescueCentreAPIFF37939B.POST..volunteers
  rescueCentreAPIvolunteersPOST93BE39AB:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      ResourceId:
        Ref: rescueCentreAPIvolunteers92C3BD90
      RestApiId:
        Ref: rescueCentreAPID8DB9A2C
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - volunteersPOST8E5FA4CF
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/volunteers/POST/Resource
  rescueCentreAPIvolunteersPUTApiPermissionbackendrescueCentreAPIFF37939BPUTvolunteersD2D83A45:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - volunteersPUT7FB1E95F
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: rescueCentreAPID8DB9A2C
            - /
            - Ref: rescueCentreAPIDeploymentStageprodF4DDB93C
            - /PUT/volunteers
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/volunteers/PUT/ApiPermission.backendrescueCentreAPIFF37939B.PUT..volunteers
  rescueCentreAPIvolunteersPUTApiPermissionTestbackendrescueCentreAPIFF37939BPUTvolunteers0904A23B:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - volunteersPUT7FB1E95F
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: rescueCentreAPID8DB9A2C
            - /test-invoke-stage/PUT/volunteers
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/volunteers/PUT/ApiPermission.Test.backendrescueCentreAPIFF37939B.PUT..volunteers
  rescueCentreAPIvolunteersPUT39E77AE4:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: PUT
      ResourceId:
        Ref: rescueCentreAPIvolunteers92C3BD90
      RestApiId:
        Ref: rescueCentreAPID8DB9A2C
      AuthorizationScopes:
        - openid
        - profile
        - email
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId: 
        Ref: "adminSectionAuth"
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - volunteersPUT7FB1E95F
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/volunteers/PUT/Resource
  rescueCentreAPIvolunteersDELETEApiPermissionbackendrescueCentreAPIFF37939BDELETEvolunteers5268B969:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - volunteersDELETED9D4372C
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: rescueCentreAPID8DB9A2C
            - /
            - Ref: rescueCentreAPIDeploymentStageprodF4DDB93C
            - /DELETE/volunteers
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/volunteers/DELETE/ApiPermission.backendrescueCentreAPIFF37939B.DELETE..volunteers
  rescueCentreAPIvolunteersDELETEApiPermissionTestbackendrescueCentreAPIFF37939BDELETEvolunteersB06244EB:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - volunteersDELETED9D4372C
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: rescueCentreAPID8DB9A2C
            - /test-invoke-stage/DELETE/volunteers
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/volunteers/DELETE/ApiPermission.Test.backendrescueCentreAPIFF37939B.DELETE..volunteers
  rescueCentreAPIvolunteersDELETE6600AA6E:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: DELETE
      ResourceId:
        Ref: rescueCentreAPIvolunteers92C3BD90
      RestApiId:
        Ref: rescueCentreAPID8DB9A2C
      AuthorizationScopes:
        - openid
        - profile
        - email
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId: 
        Ref: "adminSectionAuth"
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - volunteersDELETED9D4372C
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/volunteers/DELETE/Resource
  rescueCentreAPIvolunteersGETApiPermissionbackendrescueCentreAPIFF37939BGETvolunteersF3E698A2:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - volunteersGET331FC326
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: rescueCentreAPID8DB9A2C
            - /
            - Ref: rescueCentreAPIDeploymentStageprodF4DDB93C
            - /GET/volunteers
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/volunteers/GET/ApiPermission.backendrescueCentreAPIFF37939B.GET..volunteers
  rescueCentreAPIvolunteersGETApiPermissionTestbackendrescueCentreAPIFF37939BGETvolunteers9CEFC940:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - volunteersGET331FC326
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: rescueCentreAPID8DB9A2C
            - /test-invoke-stage/GET/volunteers
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/volunteers/GET/ApiPermission.Test.backendrescueCentreAPIFF37939B.GET..volunteers
  rescueCentreAPIvolunteersGET2E630DE3:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: rescueCentreAPIvolunteers92C3BD90
      RestApiId:
        Ref: rescueCentreAPID8DB9A2C
      AuthorizationScopes:
        - openid
        - profile
        - email
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId: 
        Ref: "adminSectionAuth"
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - volunteersGET331FC326
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/volunteers/GET/Resource
  adminSectionAuth:
    Type: AWS::ApiGateway::Authorizer
    Properties:
      RestApiId:
        Ref: rescueCentreAPID8DB9A2C
      Type: COGNITO_USER_POOLS
      IdentitySource: method.request.header.Authorization
      Name: adminSectionAuth
      ProviderARNs:
        - arn:aws:cognito-idp:eu-west-2:040684591284:userpool/eu-west-2_3T4vtfKJE
    Metadata:
      aws:cdk:path: backend/adminSectionAuth
  rehomersTableD4C9D2D2:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: backend/rehomersTable/Resource
  rehomersPOSTServiceRole269BE4C6:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: backend/rehomersPOST/ServiceRole/Resource
  rehomersPOSTServiceRoleDefaultPolicyAE887C73:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - rehomersTableD4C9D2D2
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: rehomersPOSTServiceRoleDefaultPolicyAE887C73
      Roles:
        - Ref: rehomersPOSTServiceRole269BE4C6
    Metadata:
      aws:cdk:path: backend/rehomersPOST/ServiceRole/DefaultPolicy/Resource
  rehomersPOSTCCF9244E:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters4f76d841203fe4ff1d99b8165e457574d235d7a0f724004eb959125877d0ebbcS3Bucket0ABF0F42
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters4f76d841203fe4ff1d99b8165e457574d235d7a0f724004eb959125877d0ebbcS3VersionKeyCCC9D378
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters4f76d841203fe4ff1d99b8165e457574d235d7a0f724004eb959125877d0ebbcS3VersionKeyCCC9D378
      Handler: app.lambda_handler
      Role:
        Fn::GetAtt:
          - rehomersPOSTServiceRole269BE4C6
          - Arn
      Runtime: python3.8
      Environment:
        Variables:
          TABLE_NAME:
            Ref: rehomersTableD4C9D2D2
    DependsOn:
      - rehomersPOSTServiceRoleDefaultPolicyAE887C73
      - rehomersPOSTServiceRole269BE4C6
    Metadata:
      aws:cdk:path: backend/rehomersPOST/Resource
      aws:asset:path: asset.4f76d841203fe4ff1d99b8165e457574d235d7a0f724004eb959125877d0ebbc
      aws:asset:property: Code
  rehomersPUTServiceRoleBB20F93F:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: backend/rehomersPUT/ServiceRole/Resource
  rehomersPUTServiceRoleDefaultPolicyF78EDC04:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - rehomersTableD4C9D2D2
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: rehomersPUTServiceRoleDefaultPolicyF78EDC04
      Roles:
        - Ref: rehomersPUTServiceRoleBB20F93F
    Metadata:
      aws:cdk:path: backend/rehomersPUT/ServiceRole/DefaultPolicy/Resource
  rehomersPUT3BC9B05D:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters4f76d841203fe4ff1d99b8165e457574d235d7a0f724004eb959125877d0ebbcS3Bucket0ABF0F42
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters4f76d841203fe4ff1d99b8165e457574d235d7a0f724004eb959125877d0ebbcS3VersionKeyCCC9D378
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters4f76d841203fe4ff1d99b8165e457574d235d7a0f724004eb959125877d0ebbcS3VersionKeyCCC9D378
      Handler: app.lambda_handler
      Role:
        Fn::GetAtt:
          - rehomersPUTServiceRoleBB20F93F
          - Arn
      Runtime: python3.8
      Environment:
        Variables:
          requiresAuth: "True"
          TABLE_NAME:
            Ref: rehomersTableD4C9D2D2
    DependsOn:
      - rehomersPUTServiceRoleDefaultPolicyF78EDC04
      - rehomersPUTServiceRoleBB20F93F
    Metadata:
      aws:cdk:path: backend/rehomersPUT/Resource
      aws:asset:path: asset.4f76d841203fe4ff1d99b8165e457574d235d7a0f724004eb959125877d0ebbc
      aws:asset:property: Code
  rehomersDELETEServiceRole8B8CF48A:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: backend/rehomersDELETE/ServiceRole/Resource
  rehomersDELETEServiceRoleDefaultPolicyAA11998E:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - rehomersTableD4C9D2D2
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: rehomersDELETEServiceRoleDefaultPolicyAA11998E
      Roles:
        - Ref: rehomersDELETEServiceRole8B8CF48A
    Metadata:
      aws:cdk:path: backend/rehomersDELETE/ServiceRole/DefaultPolicy/Resource
  rehomersDELETE46F353DF:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters13775c47e43ecc1a49b08258c7f39e3494fbd728b81ae7fd058fea714ca3171fS3Bucket851FBF56
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters13775c47e43ecc1a49b08258c7f39e3494fbd728b81ae7fd058fea714ca3171fS3VersionKey52006D58
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters13775c47e43ecc1a49b08258c7f39e3494fbd728b81ae7fd058fea714ca3171fS3VersionKey52006D58
      Handler: app.lambda_handler
      Role:
        Fn::GetAtt:
          - rehomersDELETEServiceRole8B8CF48A
          - Arn
      Runtime: python3.8
      Environment:
        Variables:
          requiresAuth: "True"
          TABLE_NAME:
            Ref: rehomersTableD4C9D2D2
    DependsOn:
      - rehomersDELETEServiceRoleDefaultPolicyAA11998E
      - rehomersDELETEServiceRole8B8CF48A
    Metadata:
      aws:cdk:path: backend/rehomersDELETE/Resource
      aws:asset:path: asset.13775c47e43ecc1a49b08258c7f39e3494fbd728b81ae7fd058fea714ca3171f
      aws:asset:property: Code
  rehomersGETServiceRole348D42C8:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: backend/rehomersGET/ServiceRole/Resource
  rehomersGETServiceRoleDefaultPolicyFC0540D4:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:GetItem
              - dynamodb:Scan
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - rehomersTableD4C9D2D2
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: rehomersGETServiceRoleDefaultPolicyFC0540D4
      Roles:
        - Ref: rehomersGETServiceRole348D42C8
    Metadata:
      aws:cdk:path: backend/rehomersGET/ServiceRole/DefaultPolicy/Resource
  rehomersGETD6E52D67:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParametersbfa705bf071aa61fea8b2c35cc3697abf60acc4a66076a283ed13b511afb8d01S3Bucket7BD0C3FE
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersbfa705bf071aa61fea8b2c35cc3697abf60acc4a66076a283ed13b511afb8d01S3VersionKey29245219
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersbfa705bf071aa61fea8b2c35cc3697abf60acc4a66076a283ed13b511afb8d01S3VersionKey29245219
      Handler: app.lambda_handler
      Role:
        Fn::GetAtt:
          - rehomersGETServiceRole348D42C8
          - Arn
      Runtime: python3.8
      Environment:
        Variables:
          requiresAuth: "True"
          TABLE_NAME:
            Ref: rehomersTableD4C9D2D2
    DependsOn:
      - rehomersGETServiceRoleDefaultPolicyFC0540D4
      - rehomersGETServiceRole348D42C8
    Metadata:
      aws:cdk:path: backend/rehomersGET/Resource
      aws:asset:path: asset.bfa705bf071aa61fea8b2c35cc3697abf60acc4a66076a283ed13b511afb8d01
      aws:asset:property: Code
  horsesTable42466579:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: backend/horsesTable/Resource
  horsesPOSTServiceRole44DEE26B:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: backend/horsesPOST/ServiceRole/Resource
  horsesPOSTServiceRoleDefaultPolicy99828D6E:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - horsesTable42466579
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: horsesPOSTServiceRoleDefaultPolicy99828D6E
      Roles:
        - Ref: horsesPOSTServiceRole44DEE26B
    Metadata:
      aws:cdk:path: backend/horsesPOST/ServiceRole/DefaultPolicy/Resource
  horsesPOST4A799E97:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters4f76d841203fe4ff1d99b8165e457574d235d7a0f724004eb959125877d0ebbcS3Bucket0ABF0F42
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters4f76d841203fe4ff1d99b8165e457574d235d7a0f724004eb959125877d0ebbcS3VersionKeyCCC9D378
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters4f76d841203fe4ff1d99b8165e457574d235d7a0f724004eb959125877d0ebbcS3VersionKeyCCC9D378
      Handler: app.lambda_handler
      Role:
        Fn::GetAtt:
          - horsesPOSTServiceRole44DEE26B
          - Arn
      Runtime: python3.8
      Environment:
        Variables:
          requiresAuth: "True"
          TABLE_NAME:
            Ref: horsesTable42466579
    DependsOn:
      - horsesPOSTServiceRoleDefaultPolicy99828D6E
      - horsesPOSTServiceRole44DEE26B
    Metadata:
      aws:cdk:path: backend/horsesPOST/Resource
      aws:asset:path: asset.4f76d841203fe4ff1d99b8165e457574d235d7a0f724004eb959125877d0ebbc
      aws:asset:property: Code
  horsesPUTServiceRoleCA97C24F:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: backend/horsesPUT/ServiceRole/Resource
  horsesPUTServiceRoleDefaultPolicyF6184A3D:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - horsesTable42466579
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: horsesPUTServiceRoleDefaultPolicyF6184A3D
      Roles:
        - Ref: horsesPUTServiceRoleCA97C24F
    Metadata:
      aws:cdk:path: backend/horsesPUT/ServiceRole/DefaultPolicy/Resource
  horsesPUT1D522FB2:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters4f76d841203fe4ff1d99b8165e457574d235d7a0f724004eb959125877d0ebbcS3Bucket0ABF0F42
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters4f76d841203fe4ff1d99b8165e457574d235d7a0f724004eb959125877d0ebbcS3VersionKeyCCC9D378
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters4f76d841203fe4ff1d99b8165e457574d235d7a0f724004eb959125877d0ebbcS3VersionKeyCCC9D378
      Handler: app.lambda_handler
      Role:
        Fn::GetAtt:
          - horsesPUTServiceRoleCA97C24F
          - Arn
      Runtime: python3.8
      Environment:
        Variables:
          requiresAuth: "True"
          TABLE_NAME:
            Ref: horsesTable42466579
    DependsOn:
      - horsesPUTServiceRoleDefaultPolicyF6184A3D
      - horsesPUTServiceRoleCA97C24F
    Metadata:
      aws:cdk:path: backend/horsesPUT/Resource
      aws:asset:path: asset.4f76d841203fe4ff1d99b8165e457574d235d7a0f724004eb959125877d0ebbc
      aws:asset:property: Code
  horsesDELETEServiceRoleCFBBFE4D:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: backend/horsesDELETE/ServiceRole/Resource
  horsesDELETEServiceRoleDefaultPolicyA92B6046:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - horsesTable42466579
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: horsesDELETEServiceRoleDefaultPolicyA92B6046
      Roles:
        - Ref: horsesDELETEServiceRoleCFBBFE4D
    Metadata:
      aws:cdk:path: backend/horsesDELETE/ServiceRole/DefaultPolicy/Resource
  horsesDELETEA60F3F3A:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters13775c47e43ecc1a49b08258c7f39e3494fbd728b81ae7fd058fea714ca3171fS3Bucket851FBF56
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters13775c47e43ecc1a49b08258c7f39e3494fbd728b81ae7fd058fea714ca3171fS3VersionKey52006D58
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters13775c47e43ecc1a49b08258c7f39e3494fbd728b81ae7fd058fea714ca3171fS3VersionKey52006D58
      Handler: app.lambda_handler
      Role:
        Fn::GetAtt:
          - horsesDELETEServiceRoleCFBBFE4D
          - Arn
      Runtime: python3.8
      Environment:
        Variables:
          requiresAuth: "True"
          TABLE_NAME:
            Ref: horsesTable42466579
    DependsOn:
      - horsesDELETEServiceRoleDefaultPolicyA92B6046
      - horsesDELETEServiceRoleCFBBFE4D
    Metadata:
      aws:cdk:path: backend/horsesDELETE/Resource
      aws:asset:path: asset.13775c47e43ecc1a49b08258c7f39e3494fbd728b81ae7fd058fea714ca3171f
      aws:asset:property: Code
  horsesGETServiceRole949746AC:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: backend/horsesGET/ServiceRole/Resource
  horsesGETServiceRoleDefaultPolicyEBC4EEE2:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:GetItem
              - dynamodb:Scan
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - horsesTable42466579
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: horsesGETServiceRoleDefaultPolicyEBC4EEE2
      Roles:
        - Ref: horsesGETServiceRole949746AC
    Metadata:
      aws:cdk:path: backend/horsesGET/ServiceRole/DefaultPolicy/Resource
  horsesGET643349E1:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParametersbfa705bf071aa61fea8b2c35cc3697abf60acc4a66076a283ed13b511afb8d01S3Bucket7BD0C3FE
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersbfa705bf071aa61fea8b2c35cc3697abf60acc4a66076a283ed13b511afb8d01S3VersionKey29245219
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersbfa705bf071aa61fea8b2c35cc3697abf60acc4a66076a283ed13b511afb8d01S3VersionKey29245219
      Handler: app.lambda_handler
      Role:
        Fn::GetAtt:
          - horsesGETServiceRole949746AC
          - Arn
      Runtime: python3.8
      Environment:
        Variables:
          TABLE_NAME:
            Ref: horsesTable42466579
    DependsOn:
      - horsesGETServiceRoleDefaultPolicyEBC4EEE2
      - horsesGETServiceRole949746AC
    Metadata:
      aws:cdk:path: backend/horsesGET/Resource
      aws:asset:path: asset.bfa705bf071aa61fea8b2c35cc3697abf60acc4a66076a283ed13b511afb8d01
      aws:asset:property: Code
  queriesTableC1676847:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: backend/queriesTable/Resource
  queriesPOSTServiceRole32581F5E:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: backend/queriesPOST/ServiceRole/Resource
  queriesPOSTServiceRoleDefaultPolicyE6325495:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - queriesTableC1676847
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: queriesPOSTServiceRoleDefaultPolicyE6325495
      Roles:
        - Ref: queriesPOSTServiceRole32581F5E
    Metadata:
      aws:cdk:path: backend/queriesPOST/ServiceRole/DefaultPolicy/Resource
  queriesPOSTBFAE976B:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters4f76d841203fe4ff1d99b8165e457574d235d7a0f724004eb959125877d0ebbcS3Bucket0ABF0F42
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters4f76d841203fe4ff1d99b8165e457574d235d7a0f724004eb959125877d0ebbcS3VersionKeyCCC9D378
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters4f76d841203fe4ff1d99b8165e457574d235d7a0f724004eb959125877d0ebbcS3VersionKeyCCC9D378
      Handler: app.lambda_handler
      Role:
        Fn::GetAtt:
          - queriesPOSTServiceRole32581F5E
          - Arn
      Runtime: python3.8
      Environment:
        Variables:
          TABLE_NAME:
            Ref: queriesTableC1676847
    DependsOn:
      - queriesPOSTServiceRoleDefaultPolicyE6325495
      - queriesPOSTServiceRole32581F5E
    Metadata:
      aws:cdk:path: backend/queriesPOST/Resource
      aws:asset:path: asset.4f76d841203fe4ff1d99b8165e457574d235d7a0f724004eb959125877d0ebbc
      aws:asset:property: Code
  queriesDELETEServiceRole4C62A802:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: backend/queriesDELETE/ServiceRole/Resource
  queriesDELETEServiceRoleDefaultPolicy03EAD89B:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - queriesTableC1676847
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: queriesDELETEServiceRoleDefaultPolicy03EAD89B
      Roles:
        - Ref: queriesDELETEServiceRole4C62A802
    Metadata:
      aws:cdk:path: backend/queriesDELETE/ServiceRole/DefaultPolicy/Resource
  queriesDELETE502B0FFA:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters13775c47e43ecc1a49b08258c7f39e3494fbd728b81ae7fd058fea714ca3171fS3Bucket851FBF56
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters13775c47e43ecc1a49b08258c7f39e3494fbd728b81ae7fd058fea714ca3171fS3VersionKey52006D58
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters13775c47e43ecc1a49b08258c7f39e3494fbd728b81ae7fd058fea714ca3171fS3VersionKey52006D58
      Handler: app.lambda_handler
      Role:
        Fn::GetAtt:
          - queriesDELETEServiceRole4C62A802
          - Arn
      Runtime: python3.8
      Environment:
        Variables:
          requiresAuth: "True"
          TABLE_NAME:
            Ref: queriesTableC1676847
    DependsOn:
      - queriesDELETEServiceRoleDefaultPolicy03EAD89B
      - queriesDELETEServiceRole4C62A802
    Metadata:
      aws:cdk:path: backend/queriesDELETE/Resource
      aws:asset:path: asset.13775c47e43ecc1a49b08258c7f39e3494fbd728b81ae7fd058fea714ca3171f
      aws:asset:property: Code
  queriesGETServiceRole718DC78F:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: backend/queriesGET/ServiceRole/Resource
  queriesGETServiceRoleDefaultPolicy96EFAC8B:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:GetItem
              - dynamodb:Scan
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - queriesTableC1676847
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: queriesGETServiceRoleDefaultPolicy96EFAC8B
      Roles:
        - Ref: queriesGETServiceRole718DC78F
    Metadata:
      aws:cdk:path: backend/queriesGET/ServiceRole/DefaultPolicy/Resource
  queriesGET9BCD2530:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParametersbfa705bf071aa61fea8b2c35cc3697abf60acc4a66076a283ed13b511afb8d01S3Bucket7BD0C3FE
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersbfa705bf071aa61fea8b2c35cc3697abf60acc4a66076a283ed13b511afb8d01S3VersionKey29245219
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersbfa705bf071aa61fea8b2c35cc3697abf60acc4a66076a283ed13b511afb8d01S3VersionKey29245219
      Handler: app.lambda_handler
      Role:
        Fn::GetAtt:
          - queriesGETServiceRole718DC78F
          - Arn
      Runtime: python3.8
      Environment:
        Variables:
          requiresAuth: "True"
          TABLE_NAME:
            Ref: queriesTableC1676847
    DependsOn:
      - queriesGETServiceRoleDefaultPolicy96EFAC8B
      - queriesGETServiceRole718DC78F
    Metadata:
      aws:cdk:path: backend/queriesGET/Resource
      aws:asset:path: asset.bfa705bf071aa61fea8b2c35cc3697abf60acc4a66076a283ed13b511afb8d01
      aws:asset:property: Code
  volunteersTableE6E8448C:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: backend/volunteersTable/Resource
  volunteersPOSTServiceRole760BFB86:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: backend/volunteersPOST/ServiceRole/Resource
  volunteersPOSTServiceRoleDefaultPolicyCC7342F2:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - volunteersTableE6E8448C
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: volunteersPOSTServiceRoleDefaultPolicyCC7342F2
      Roles:
        - Ref: volunteersPOSTServiceRole760BFB86
    Metadata:
      aws:cdk:path: backend/volunteersPOST/ServiceRole/DefaultPolicy/Resource
  volunteersPOST8E5FA4CF:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters4f76d841203fe4ff1d99b8165e457574d235d7a0f724004eb959125877d0ebbcS3Bucket0ABF0F42
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters4f76d841203fe4ff1d99b8165e457574d235d7a0f724004eb959125877d0ebbcS3VersionKeyCCC9D378
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters4f76d841203fe4ff1d99b8165e457574d235d7a0f724004eb959125877d0ebbcS3VersionKeyCCC9D378
      Handler: app.lambda_handler
      Role:
        Fn::GetAtt:
          - volunteersPOSTServiceRole760BFB86
          - Arn
      Runtime: python3.8
      Environment:
        Variables:
          TABLE_NAME:
            Ref: volunteersTableE6E8448C
    DependsOn:
      - volunteersPOSTServiceRoleDefaultPolicyCC7342F2
      - volunteersPOSTServiceRole760BFB86
    Metadata:
      aws:cdk:path: backend/volunteersPOST/Resource
      aws:asset:path: asset.4f76d841203fe4ff1d99b8165e457574d235d7a0f724004eb959125877d0ebbc
      aws:asset:property: Code
  volunteersPUTServiceRole81454C4A:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: backend/volunteersPUT/ServiceRole/Resource
  volunteersPUTServiceRoleDefaultPolicyB853FE4B:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - volunteersTableE6E8448C
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: volunteersPUTServiceRoleDefaultPolicyB853FE4B
      Roles:
        - Ref: volunteersPUTServiceRole81454C4A
    Metadata:
      aws:cdk:path: backend/volunteersPUT/ServiceRole/DefaultPolicy/Resource
  volunteersPUT7FB1E95F:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters4f76d841203fe4ff1d99b8165e457574d235d7a0f724004eb959125877d0ebbcS3Bucket0ABF0F42
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters4f76d841203fe4ff1d99b8165e457574d235d7a0f724004eb959125877d0ebbcS3VersionKeyCCC9D378
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters4f76d841203fe4ff1d99b8165e457574d235d7a0f724004eb959125877d0ebbcS3VersionKeyCCC9D378
      Handler: app.lambda_handler
      Role:
        Fn::GetAtt:
          - volunteersPUTServiceRole81454C4A
          - Arn
      Runtime: python3.8
      Environment:
        Variables:
          requiresAuth: "True"
          TABLE_NAME:
            Ref: volunteersTableE6E8448C
    DependsOn:
      - volunteersPUTServiceRoleDefaultPolicyB853FE4B
      - volunteersPUTServiceRole81454C4A
    Metadata:
      aws:cdk:path: backend/volunteersPUT/Resource
      aws:asset:path: asset.4f76d841203fe4ff1d99b8165e457574d235d7a0f724004eb959125877d0ebbc
      aws:asset:property: Code
  volunteersDELETEServiceRole229C1312:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: backend/volunteersDELETE/ServiceRole/Resource
  volunteersDELETEServiceRoleDefaultPolicy9EC3494C:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - volunteersTableE6E8448C
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: volunteersDELETEServiceRoleDefaultPolicy9EC3494C
      Roles:
        - Ref: volunteersDELETEServiceRole229C1312
    Metadata:
      aws:cdk:path: backend/volunteersDELETE/ServiceRole/DefaultPolicy/Resource
  volunteersDELETED9D4372C:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters13775c47e43ecc1a49b08258c7f39e3494fbd728b81ae7fd058fea714ca3171fS3Bucket851FBF56
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters13775c47e43ecc1a49b08258c7f39e3494fbd728b81ae7fd058fea714ca3171fS3VersionKey52006D58
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters13775c47e43ecc1a49b08258c7f39e3494fbd728b81ae7fd058fea714ca3171fS3VersionKey52006D58
      Handler: app.lambda_handler
      Role:
        Fn::GetAtt:
          - volunteersDELETEServiceRole229C1312
          - Arn
      Runtime: python3.8
      Environment:
        Variables:
          requiresAuth: "True"
          TABLE_NAME:
            Ref: volunteersTableE6E8448C
    DependsOn:
      - volunteersDELETEServiceRoleDefaultPolicy9EC3494C
      - volunteersDELETEServiceRole229C1312
    Metadata:
      aws:cdk:path: backend/volunteersDELETE/Resource
      aws:asset:path: asset.13775c47e43ecc1a49b08258c7f39e3494fbd728b81ae7fd058fea714ca3171f
      aws:asset:property: Code
  volunteersGETServiceRole10BB60F2:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: backend/volunteersGET/ServiceRole/Resource
  volunteersGETServiceRoleDefaultPolicy36A52079:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:GetItem
              - dynamodb:Scan
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - volunteersTableE6E8448C
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: volunteersGETServiceRoleDefaultPolicy36A52079
      Roles:
        - Ref: volunteersGETServiceRole10BB60F2
    Metadata:
      aws:cdk:path: backend/volunteersGET/ServiceRole/DefaultPolicy/Resource
  volunteersGET331FC326:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParametersbfa705bf071aa61fea8b2c35cc3697abf60acc4a66076a283ed13b511afb8d01S3Bucket7BD0C3FE
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersbfa705bf071aa61fea8b2c35cc3697abf60acc4a66076a283ed13b511afb8d01S3VersionKey29245219
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersbfa705bf071aa61fea8b2c35cc3697abf60acc4a66076a283ed13b511afb8d01S3VersionKey29245219
      Handler: app.lambda_handler
      Role:
        Fn::GetAtt:
          - volunteersGETServiceRole10BB60F2
          - Arn
      Runtime: python3.8
      Environment:
        Variables:
          requiresAuth: "True"
          TABLE_NAME:
            Ref: volunteersTableE6E8448C
    DependsOn:
      - volunteersGETServiceRoleDefaultPolicy36A52079
      - volunteersGETServiceRole10BB60F2
    Metadata:
      aws:cdk:path: backend/volunteersGET/Resource
      aws:asset:path: asset.bfa705bf071aa61fea8b2c35cc3697abf60acc4a66076a283ed13b511afb8d01
      aws:asset:property: Code
  websiteBucket74B0F9E5:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: www.leighrescuecentre.co.uk
      CorsConfiguration:
        CorsRules:
          - AllowedMethods:
              - GET
              - PUT
              - HEAD
              - POST
              - DELETE
            AllowedOrigins:
              - "*"
      WebsiteConfiguration:
        IndexDocument: index.html
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: backend/websiteBucket/Resource
  websiteBucketPolicy112A7E46:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: websiteBucket74B0F9E5
      PolicyDocument:
        Statement:
          - Action: s3:GetObject
            Effect: Allow
            Principal: "*"
            Resource:
              Fn::Join:
                - ""
                - - Fn::GetAtt:
                      - websiteBucket74B0F9E5
                      - Arn
                  - /*
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: backend/websiteBucket/Policy/Resource
  imagesBucketF1A776CF:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: media.leighrescuecentre.co.uk
      CorsConfiguration:
        CorsRules:
          - AllowedMethods:
              - GET
              - PUT
              - HEAD
              - POST
              - DELETE
            AllowedOrigins:
              - "*"
      WebsiteConfiguration:
        IndexDocument: index.html
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: backend/imagesBucket/Resource
  imagesBucketPolicy5807A195:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: imagesBucketF1A776CF
      PolicyDocument:
        Statement:
          - Action: s3:GetObject
            Effect: Allow
            Principal: "*"
            Resource:
              Fn::Join:
                - ""
                - - Fn::GetAtt:
                      - imagesBucketF1A776CF
                      - Arn
                  - /*
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: backend/imagesBucket/Policy/Resource
  websiteBucketDistributionCFDistributionB07284B0:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
          CachedMethods:
            - GET
            - HEAD
          Compress: true
          ForwardedValues:
            Cookies:
              Forward: none
            QueryString: false
          TargetOriginId: origin1
          ViewerProtocolPolicy: redirect-to-https
        DefaultRootObject: index.html
        Enabled: true
        HttpVersion: http2
        IPV6Enabled: true
        Origins:
          - DomainName:
              Fn::GetAtt:
                - websiteBucket74B0F9E5
                - RegionalDomainName
            Id: origin1
            S3OriginConfig: {}
        PriceClass: PriceClass_100
        ViewerCertificate:
          CloudFrontDefaultCertificate: true
    Metadata:
      aws:cdk:path: backend/websiteBucketDistribution/CFDistribution
  deployStaticWebsiteCustomResource73B4205E:
    Type: Custom::CDKBucketDeployment
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536
          - Arn
      SourceBucketNames:
        - Ref: AssetParameters4baad7a94471c2073d5f0ddd13937e78218bfc3b1c53386548192af67a08fd49S3BucketB35ACF65
      SourceObjectKeys:
        - Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters4baad7a94471c2073d5f0ddd13937e78218bfc3b1c53386548192af67a08fd49S3VersionKey943A7729
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters4baad7a94471c2073d5f0ddd13937e78218bfc3b1c53386548192af67a08fd49S3VersionKey943A7729
      DestinationBucketName:
        Ref: websiteBucket74B0F9E5
      DistributionId:
        Ref: websiteBucketDistributionCFDistributionB07284B0
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: backend/deployStaticWebsite/CustomResource/Default
  CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: backend/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/Resource
  CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
            Effect: Allow
            Resource:
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":s3:::"
                    - Ref: AssetParameters4baad7a94471c2073d5f0ddd13937e78218bfc3b1c53386548192af67a08fd49S3BucketB35ACF65
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":s3:::"
                    - Ref: AssetParameters4baad7a94471c2073d5f0ddd13937e78218bfc3b1c53386548192af67a08fd49S3BucketB35ACF65
                    - /*
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
              - s3:DeleteObject*
              - s3:PutObject*
              - s3:Abort*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - websiteBucket74B0F9E5
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - websiteBucket74B0F9E5
                        - Arn
                    - /*
          - Action:
              - cloudfront:GetInvalidation
              - cloudfront:CreateInvalidation
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF
      Roles:
        - Ref: CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265
    Metadata:
      aws:cdk:path: backend/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/DefaultPolicy/Resource
  CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParametersa9125fa9a40550c71cde90bd478cc23091e868067a12380c1df0827d013ad2ffS3Bucket848A1F31
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersa9125fa9a40550c71cde90bd478cc23091e868067a12380c1df0827d013ad2ffS3VersionKey983DBE96
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersa9125fa9a40550c71cde90bd478cc23091e868067a12380c1df0827d013ad2ffS3VersionKey983DBE96
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265
          - Arn
      Runtime: python3.6
      Timeout: 900
    DependsOn:
      - CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF
      - CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265
    Metadata:
      aws:cdk:path: backend/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/Resource
      aws:asset:path: asset.a9125fa9a40550c71cde90bd478cc23091e868067a12380c1df0827d013ad2ff.zip
      aws:asset:property: Code
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Modules: aws-cdk=1.51.0,@aws-cdk/assets=1.45.0,@aws-cdk/aws-apigateway=1.45.0,@aws-cdk/aws-applicationautoscaling=1.45.0,@aws-cdk/aws-autoscaling-common=1.45.0,@aws-cdk/aws-certificatemanager=1.45.0,@aws-cdk/aws-cloudformation=1.45.0,@aws-cdk/aws-cloudfront=1.49.0,@aws-cdk/aws-cloudwatch=1.45.0,@aws-cdk/aws-dynamodb=1.45.0,@aws-cdk/aws-ec2=1.45.0,@aws-cdk/aws-elasticloadbalancingv2=1.45.0,@aws-cdk/aws-events=1.45.0,@aws-cdk/aws-iam=1.45.0,@aws-cdk/aws-kms=1.45.0,@aws-cdk/aws-lambda=1.45.0,@aws-cdk/aws-logs=1.45.0,@aws-cdk/aws-route53=1.45.0,@aws-cdk/aws-s3=1.45.0,@aws-cdk/aws-s3-assets=1.45.0,@aws-cdk/aws-s3-deployment=1.49.0,@aws-cdk/aws-sns=1.45.0,@aws-cdk/aws-sqs=1.45.0,@aws-cdk/aws-ssm=1.45.0,@aws-cdk/cdk-assets-schema=1.45.0,@aws-cdk/cloud-assembly-schema=1.45.0,@aws-cdk/core=1.45.0,@aws-cdk/custom-resources=1.45.0,@aws-cdk/cx-api=1.45.0,@aws-cdk/region-info=1.45.0,jsii-runtime=Python/3.8.3
    Condition: CDKMetadataAvailable
Outputs:
  rescueCentreAPIEndpoint9D33F3B0:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: rescueCentreAPID8DB9A2C
          - .execute-api.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /
          - Ref: rescueCentreAPIDeploymentStageprodF4DDB93C
          - /
Parameters:
  AssetParameters4f76d841203fe4ff1d99b8165e457574d235d7a0f724004eb959125877d0ebbcS3Bucket0ABF0F42:
    Type: String
    Description: S3 bucket for asset "4f76d841203fe4ff1d99b8165e457574d235d7a0f724004eb959125877d0ebbc"
  AssetParameters4f76d841203fe4ff1d99b8165e457574d235d7a0f724004eb959125877d0ebbcS3VersionKeyCCC9D378:
    Type: String
    Description: S3 key for asset version "4f76d841203fe4ff1d99b8165e457574d235d7a0f724004eb959125877d0ebbc"
  AssetParameters4f76d841203fe4ff1d99b8165e457574d235d7a0f724004eb959125877d0ebbcArtifactHashCC49AA1F:
    Type: String
    Description: Artifact hash for asset "4f76d841203fe4ff1d99b8165e457574d235d7a0f724004eb959125877d0ebbc"
  AssetParameters13775c47e43ecc1a49b08258c7f39e3494fbd728b81ae7fd058fea714ca3171fS3Bucket851FBF56:
    Type: String
    Description: S3 bucket for asset "13775c47e43ecc1a49b08258c7f39e3494fbd728b81ae7fd058fea714ca3171f"
  AssetParameters13775c47e43ecc1a49b08258c7f39e3494fbd728b81ae7fd058fea714ca3171fS3VersionKey52006D58:
    Type: String
    Description: S3 key for asset version "13775c47e43ecc1a49b08258c7f39e3494fbd728b81ae7fd058fea714ca3171f"
  AssetParameters13775c47e43ecc1a49b08258c7f39e3494fbd728b81ae7fd058fea714ca3171fArtifactHash829EEE8B:
    Type: String
    Description: Artifact hash for asset "13775c47e43ecc1a49b08258c7f39e3494fbd728b81ae7fd058fea714ca3171f"
  AssetParametersbfa705bf071aa61fea8b2c35cc3697abf60acc4a66076a283ed13b511afb8d01S3Bucket7BD0C3FE:
    Type: String
    Description: S3 bucket for asset "bfa705bf071aa61fea8b2c35cc3697abf60acc4a66076a283ed13b511afb8d01"
  AssetParametersbfa705bf071aa61fea8b2c35cc3697abf60acc4a66076a283ed13b511afb8d01S3VersionKey29245219:
    Type: String
    Description: S3 key for asset version "bfa705bf071aa61fea8b2c35cc3697abf60acc4a66076a283ed13b511afb8d01"
  AssetParametersbfa705bf071aa61fea8b2c35cc3697abf60acc4a66076a283ed13b511afb8d01ArtifactHash312643BA:
    Type: String
    Description: Artifact hash for asset "bfa705bf071aa61fea8b2c35cc3697abf60acc4a66076a283ed13b511afb8d01"
  AssetParametersa9125fa9a40550c71cde90bd478cc23091e868067a12380c1df0827d013ad2ffS3Bucket848A1F31:
    Type: String
    Description: S3 bucket for asset "a9125fa9a40550c71cde90bd478cc23091e868067a12380c1df0827d013ad2ff"
  AssetParametersa9125fa9a40550c71cde90bd478cc23091e868067a12380c1df0827d013ad2ffS3VersionKey983DBE96:
    Type: String
    Description: S3 key for asset version "a9125fa9a40550c71cde90bd478cc23091e868067a12380c1df0827d013ad2ff"
  AssetParametersa9125fa9a40550c71cde90bd478cc23091e868067a12380c1df0827d013ad2ffArtifactHash08605F5E:
    Type: String
    Description: Artifact hash for asset "a9125fa9a40550c71cde90bd478cc23091e868067a12380c1df0827d013ad2ff"
  AssetParameters4baad7a94471c2073d5f0ddd13937e78218bfc3b1c53386548192af67a08fd49S3BucketB35ACF65:
    Type: String
    Description: S3 bucket for asset "4baad7a94471c2073d5f0ddd13937e78218bfc3b1c53386548192af67a08fd49"
  AssetParameters4baad7a94471c2073d5f0ddd13937e78218bfc3b1c53386548192af67a08fd49S3VersionKey943A7729:
    Type: String
    Description: S3 key for asset version "4baad7a94471c2073d5f0ddd13937e78218bfc3b1c53386548192af67a08fd49"
  AssetParameters4baad7a94471c2073d5f0ddd13937e78218bfc3b1c53386548192af67a08fd49ArtifactHashEC673010:
    Type: String
    Description: Artifact hash for asset "4baad7a94471c2073d5f0ddd13937e78218bfc3b1c53386548192af67a08fd49"
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2


Resources:
  rehomersTableD4C9D2D2:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: backend/rehomersTable/Resource
  queriesTableC1676847:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2
      TimeToLiveSpecification:
        AttributeName: expires
        Enabled: true
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: backend/queriesTable/Resource
  horsesTable42466579:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: backend/horsesTable/Resource
  volunteersTableE6E8448C:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: backend/volunteersTable/Resource
  rescueCentreAPID8DB9A2C:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: rescueCentreAPI
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Resource
  rescueCentreAPICloudWatchRole1D7B36DD:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/CloudWatchRole/Resource
  rescueCentreAPIAccount7084DBEC:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn:
        Fn::GetAtt:
          - rescueCentreAPICloudWatchRole1D7B36DD
          - Arn
    DependsOn:
      - rescueCentreAPID8DB9A2C
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Account
  rescueCentreAPIDeployment45E3B32701f544bd2140a340311406eff48db548:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId:
        Ref: rescueCentreAPID8DB9A2C
      Description: Automatically created by the RestApi construct
    DependsOn:
      - rescueCentreAPIhorsesGETB7DAC6B1
      - rescueCentreAPIhorsesOPTIONS7DED52D4
      - rescueCentreAPIhorsesC64FD68A
      - rescueCentreAPIOPTIONS56285205
      - rescueCentreAPIqueriesGETC5D419CF
      - rescueCentreAPIqueriesOPTIONSC0B68791
      - rescueCentreAPIqueriesPOST989F85C7
      - rescueCentreAPIqueriesF460DB13
      - rescueCentreAPIrehomersGETAE24A896
      - rescueCentreAPIrehomersOPTIONS14C5AEDF
      - rescueCentreAPIrehomersPOST8A9373DD
      - rescueCentreAPIrehomers3DD82C26
      - rescueCentreAPIvolunteersGET2E630DE3
      - rescueCentreAPIvolunteersOPTIONSA498F13A
      - rescueCentreAPIvolunteersPOST93BE39AB
      - rescueCentreAPIvolunteers92C3BD90
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Deployment/Resource
  rescueCentreAPIDeploymentStageprodF4DDB93C:
    Type: AWS::ApiGateway::Stage
    Properties:
      RestApiId:
        Ref: rescueCentreAPID8DB9A2C
      DeploymentId:
        Ref: rescueCentreAPIDeployment45E3B32701f544bd2140a340311406eff48db548
      StageName: prod
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/DeploymentStage.prod/Resource
  rescueCentreAPIOPTIONS56285205:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Fn::GetAtt:
          - rescueCentreAPID8DB9A2C
          - RootResourceId
      RestApiId:
        Ref: rescueCentreAPID8DB9A2C
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'GET,POST,OPTIONS'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/OPTIONS/Resource
  rescueCentreAPIrehomers3DD82C26:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - rescueCentreAPID8DB9A2C
          - RootResourceId
      PathPart: rehomers
      RestApiId:
        Ref: rescueCentreAPID8DB9A2C
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/rehomers/Resource
  rescueCentreAPIrehomersOPTIONS14C5AEDF:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: rescueCentreAPIrehomers3DD82C26
      RestApiId:
        Ref: rescueCentreAPID8DB9A2C
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'GET,POST,OPTIONS'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/rehomers/OPTIONS/Resource
  rescueCentreAPIrehomersPOSTApiPermissionbackendrescueCentreAPIFF37939BPOSTrehomers242826B3:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - rehomerApplicationLambdaBB2EE525
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: rescueCentreAPID8DB9A2C
            - /
            - Ref: rescueCentreAPIDeploymentStageprodF4DDB93C
            - /POST/rehomers
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/rehomers/POST/ApiPermission.backendrescueCentreAPIFF37939B.POST..rehomers
  rescueCentreAPIrehomersPOSTApiPermissionTestbackendrescueCentreAPIFF37939BPOSTrehomersCDBC23CC:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - rehomerApplicationLambdaBB2EE525
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: rescueCentreAPID8DB9A2C
            - /test-invoke-stage/POST/rehomers
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/rehomers/POST/ApiPermission.Test.backendrescueCentreAPIFF37939B.POST..rehomers
  rescueCentreAPIrehomersPOST8A9373DD:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      ResourceId:
        Ref: rescueCentreAPIrehomers3DD82C26
      RestApiId:
        Ref: rescueCentreAPID8DB9A2C
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - rehomerApplicationLambdaBB2EE525
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/rehomers/POST/Resource
  rescueCentreAPIrehomersGETApiPermissionbackendrescueCentreAPIFF37939BGETrehomersE5AC8689:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - rehomerApplicationLambdaBB2EE525
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: rescueCentreAPID8DB9A2C
            - /
            - Ref: rescueCentreAPIDeploymentStageprodF4DDB93C
            - /GET/rehomers
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/rehomers/GET/ApiPermission.backendrescueCentreAPIFF37939B.GET..rehomers
  rescueCentreAPIrehomersGETApiPermissionTestbackendrescueCentreAPIFF37939BGETrehomers5C7CF26F:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - rehomerApplicationLambdaBB2EE525
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: rescueCentreAPID8DB9A2C
            - /test-invoke-stage/GET/rehomers
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/rehomers/GET/ApiPermission.Test.backendrescueCentreAPIFF37939B.GET..rehomers
  rescueCentreAPIrehomersGETAE24A896:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: rescueCentreAPIrehomers3DD82C26
      RestApiId:
        Ref: rescueCentreAPID8DB9A2C
      AuthorizationScopes:
        - openid
        - profile
        - email
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId: 
        Ref: "adminSectionAuth"
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - rehomerApplicationLambdaBB2EE525
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/rehomers/GET/Resource
  rescueCentreAPIhorsesC64FD68A:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - rescueCentreAPID8DB9A2C
          - RootResourceId
      PathPart: horses
      RestApiId:
        Ref: rescueCentreAPID8DB9A2C
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/horses/Resource
  rescueCentreAPIhorsesOPTIONS7DED52D4:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: rescueCentreAPIhorsesC64FD68A
      RestApiId:
        Ref: rescueCentreAPID8DB9A2C
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'GET,POST,OPTIONS'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/horses/OPTIONS/Resource
  rescueCentreAPIhorsesGETApiPermissionbackendrescueCentreAPIFF37939BGEThorsesB82290A5:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - getHorsesLambda628D5249
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: rescueCentreAPID8DB9A2C
            - /
            - Ref: rescueCentreAPIDeploymentStageprodF4DDB93C
            - /GET/horses
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/horses/GET/ApiPermission.backendrescueCentreAPIFF37939B.GET..horses
  rescueCentreAPIhorsesGETApiPermissionTestbackendrescueCentreAPIFF37939BGEThorses6BC40FBD:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - getHorsesLambda628D5249
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: rescueCentreAPID8DB9A2C
            - /test-invoke-stage/GET/horses
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/horses/GET/ApiPermission.Test.backendrescueCentreAPIFF37939B.GET..horses
  rescueCentreAPIhorsesGETB7DAC6B1:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: rescueCentreAPIhorsesC64FD68A
      RestApiId:
        Ref: rescueCentreAPID8DB9A2C
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - getHorsesLambda628D5249
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/horses/GET/Resource
  rescueCentreAPIqueriesF460DB13:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - rescueCentreAPID8DB9A2C
          - RootResourceId
      PathPart: queries
      RestApiId:
        Ref: rescueCentreAPID8DB9A2C
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/queries/Resource
  rescueCentreAPIqueriesOPTIONSC0B68791:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: rescueCentreAPIqueriesF460DB13
      RestApiId:
        Ref: rescueCentreAPID8DB9A2C
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'GET,POST,OPTIONS'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/queries/OPTIONS/Resource
  rescueCentreAPIqueriesPOSTApiPermissionbackendrescueCentreAPIFF37939BPOSTqueries002A4A9D:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - submitQueryLambda90497EDD
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: rescueCentreAPID8DB9A2C
            - /
            - Ref: rescueCentreAPIDeploymentStageprodF4DDB93C
            - /POST/queries
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/queries/POST/ApiPermission.backendrescueCentreAPIFF37939B.POST..queries
  rescueCentreAPIqueriesPOSTApiPermissionTestbackendrescueCentreAPIFF37939BPOSTqueries4B73B910:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - submitQueryLambda90497EDD
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: rescueCentreAPID8DB9A2C
            - /test-invoke-stage/POST/queries
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/queries/POST/ApiPermission.Test.backendrescueCentreAPIFF37939B.POST..queries
  rescueCentreAPIqueriesPOST989F85C7:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      ResourceId:
        Ref: rescueCentreAPIqueriesF460DB13
      RestApiId:
        Ref: rescueCentreAPID8DB9A2C
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - submitQueryLambda90497EDD
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/queries/POST/Resource
  rescueCentreAPIqueriesGETApiPermissionbackendrescueCentreAPIFF37939BGETqueriesB9A538F9:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - submitQueryLambda90497EDD
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: rescueCentreAPID8DB9A2C
            - /
            - Ref: rescueCentreAPIDeploymentStageprodF4DDB93C
            - /GET/queries
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/queries/GET/ApiPermission.backendrescueCentreAPIFF37939B.GET..queries
  rescueCentreAPIqueriesGETApiPermissionTestbackendrescueCentreAPIFF37939BGETqueries80AEBBDC:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - submitQueryLambda90497EDD
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: rescueCentreAPID8DB9A2C
            - /test-invoke-stage/GET/queries
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/queries/GET/ApiPermission.Test.backendrescueCentreAPIFF37939B.GET..queries
  rescueCentreAPIqueriesGETC5D419CF:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: rescueCentreAPIqueriesF460DB13
      RestApiId:
        Ref: rescueCentreAPID8DB9A2C
      AuthorizationScopes:
        - openid
        - profile
        - email
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId: 
        Ref: "adminSectionAuth"
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - submitQueryLambda90497EDD
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/queries/GET/Resource
  rescueCentreAPIvolunteers92C3BD90:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - rescueCentreAPID8DB9A2C
          - RootResourceId
      PathPart: volunteers
      RestApiId:
        Ref: rescueCentreAPID8DB9A2C
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/volunteers/Resource
  rescueCentreAPIvolunteersOPTIONSA498F13A:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: rescueCentreAPIvolunteers92C3BD90
      RestApiId:
        Ref: rescueCentreAPID8DB9A2C
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'GET,POST,OPTIONS'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/volunteers/OPTIONS/Resource
  rescueCentreAPIvolunteersPOSTApiPermissionbackendrescueCentreAPIFF37939BPOSTvolunteers170C26AE:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - volunteerAppplicationLambda2C47B4DA
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: rescueCentreAPID8DB9A2C
            - /
            - Ref: rescueCentreAPIDeploymentStageprodF4DDB93C
            - /POST/volunteers
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/volunteers/POST/ApiPermission.backendrescueCentreAPIFF37939B.POST..volunteers
  rescueCentreAPIvolunteersPOSTApiPermissionTestbackendrescueCentreAPIFF37939BPOSTvolunteers6F0434BA:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - volunteerAppplicationLambda2C47B4DA
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: rescueCentreAPID8DB9A2C
            - /test-invoke-stage/POST/volunteers
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/volunteers/POST/ApiPermission.Test.backendrescueCentreAPIFF37939B.POST..volunteers
  rescueCentreAPIvolunteersPOST93BE39AB:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      ResourceId:
        Ref: rescueCentreAPIvolunteers92C3BD90
      RestApiId:
        Ref: rescueCentreAPID8DB9A2C
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - volunteerAppplicationLambda2C47B4DA
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/volunteers/POST/Resource
  rescueCentreAPIvolunteersGETApiPermissionbackendrescueCentreAPIFF37939BGETvolunteersF3E698A2:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - volunteerAppplicationLambda2C47B4DA
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: rescueCentreAPID8DB9A2C
            - /
            - Ref: rescueCentreAPIDeploymentStageprodF4DDB93C
            - /GET/volunteers
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/volunteers/GET/ApiPermission.backendrescueCentreAPIFF37939B.GET..volunteers
  rescueCentreAPIvolunteersGETApiPermissionTestbackendrescueCentreAPIFF37939BGETvolunteers9CEFC940:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - volunteerAppplicationLambda2C47B4DA
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: rescueCentreAPID8DB9A2C
            - /test-invoke-stage/GET/volunteers
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/volunteers/GET/ApiPermission.Test.backendrescueCentreAPIFF37939B.GET..volunteers
  rescueCentreAPIvolunteersGET2E630DE3:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: rescueCentreAPIvolunteers92C3BD90
      RestApiId:
        Ref: rescueCentreAPID8DB9A2C
      AuthorizationScopes:
        - openid
        - profile
        - email
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId: 
        Ref: "adminSectionAuth"
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - volunteerAppplicationLambda2C47B4DA
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: backend/rescueCentreAPI/Default/volunteers/GET/Resource
  adminSectionAuth:
    Type: AWS::ApiGateway::Authorizer
    Properties:
      RestApiId:
        Ref: rescueCentreAPID8DB9A2C
      Type: COGNITO_USER_POOLS
      IdentitySource: method.request.header.Authorization
      Name: adminSectionAuth
      ProviderARNs:
        - arn:aws:cognito-idp:eu-west-2:040684591284:userpool/eu-west-2_3T4vtfKJE
    Metadata:
      aws:cdk:path: backend/adminSectionAuth
  rehomerApplicationLambdaServiceRoleD14B0099:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: backend/rehomerApplicationLambda/ServiceRole/Resource
  rehomerApplicationLambdaServiceRoleDefaultPolicy0B3C0754:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - rehomersTableD4C9D2D2
                  - Arn
              - Ref: AWS::NoValue
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:GetItem
              - dynamodb:Scan
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - rehomersTableD4C9D2D2
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: rehomerApplicationLambdaServiceRoleDefaultPolicy0B3C0754
      Roles:
        - Ref: rehomerApplicationLambdaServiceRoleD14B0099
    Metadata:
      aws:cdk:path: backend/rehomerApplicationLambda/ServiceRole/DefaultPolicy/Resource
  rehomerApplicationLambdaBB2EE525:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameterse5803fcc31a5d70c4603ae658af2907cde996d41c37b5604dfb096440412e739S3Bucket4B75D0BA
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameterse5803fcc31a5d70c4603ae658af2907cde996d41c37b5604dfb096440412e739S3VersionKey1C426AE0
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameterse5803fcc31a5d70c4603ae658af2907cde996d41c37b5604dfb096440412e739S3VersionKey1C426AE0
      Handler: app.lambda_handler
      Role:
        Fn::GetAtt:
          - rehomerApplicationLambdaServiceRoleD14B0099
          - Arn
      Runtime: python3.8
      Environment:
        Variables:
          TABLE_NAME:
            Ref: rehomersTableD4C9D2D2
    DependsOn:
      - rehomerApplicationLambdaServiceRoleDefaultPolicy0B3C0754
      - rehomerApplicationLambdaServiceRoleD14B0099
    Metadata:
      aws:cdk:path: backend/rehomerApplicationLambda/Resource
      aws:asset:path: asset.e5803fcc31a5d70c4603ae658af2907cde996d41c37b5604dfb096440412e739
      aws:asset:property: Code
  getHorsesLambdaServiceRoleB796D7D1:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: backend/getHorsesLambda/ServiceRole/Resource
  getHorsesLambdaServiceRoleDefaultPolicy41739D5E:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:GetItem
              - dynamodb:Scan
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - horsesTable42466579
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: getHorsesLambdaServiceRoleDefaultPolicy41739D5E
      Roles:
        - Ref: getHorsesLambdaServiceRoleB796D7D1
    Metadata:
      aws:cdk:path: backend/getHorsesLambda/ServiceRole/DefaultPolicy/Resource
  getHorsesLambda628D5249:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParametersf8d34edda88bddec6150c2bf6ad20d41c5851b780b04e4129f0844d2f1965d3aS3BucketA8BF7A8B
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersf8d34edda88bddec6150c2bf6ad20d41c5851b780b04e4129f0844d2f1965d3aS3VersionKey2433B33B
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersf8d34edda88bddec6150c2bf6ad20d41c5851b780b04e4129f0844d2f1965d3aS3VersionKey2433B33B
      Handler: app.lambda_handler
      Role:
        Fn::GetAtt:
          - getHorsesLambdaServiceRoleB796D7D1
          - Arn
      Runtime: python3.8
      Environment:
        Variables:
          TABLE_NAME:
            Ref: horsesTable42466579
    DependsOn:
      - getHorsesLambdaServiceRoleDefaultPolicy41739D5E
      - getHorsesLambdaServiceRoleB796D7D1
    Metadata:
      aws:cdk:path: backend/getHorsesLambda/Resource
      aws:asset:path: asset.f8d34edda88bddec6150c2bf6ad20d41c5851b780b04e4129f0844d2f1965d3a
      aws:asset:property: Code
  submitQueryLambdaServiceRole1F179ADE:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: backend/submitQueryLambda/ServiceRole/Resource
  submitQueryLambdaServiceRoleDefaultPolicyE9EBAF22:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - queriesTableC1676847
                  - Arn
              - Ref: AWS::NoValue
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:GetItem
              - dynamodb:Scan
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - queriesTableC1676847
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: submitQueryLambdaServiceRoleDefaultPolicyE9EBAF22
      Roles:
        - Ref: submitQueryLambdaServiceRole1F179ADE
    Metadata:
      aws:cdk:path: backend/submitQueryLambda/ServiceRole/DefaultPolicy/Resource
  submitQueryLambda90497EDD:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParametersfcc7fe468dfa3d71f02725c0e9bc71881e005e2a266446731c3a426fe2cb414cS3BucketFD41C197
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersfcc7fe468dfa3d71f02725c0e9bc71881e005e2a266446731c3a426fe2cb414cS3VersionKeyCADBEB77
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersfcc7fe468dfa3d71f02725c0e9bc71881e005e2a266446731c3a426fe2cb414cS3VersionKeyCADBEB77
      Handler: app.lambda_handler
      Role:
        Fn::GetAtt:
          - submitQueryLambdaServiceRole1F179ADE
          - Arn
      Runtime: python3.8
      Environment:
        Variables:
          TABLE_NAME:
            Ref: queriesTableC1676847
    DependsOn:
      - submitQueryLambdaServiceRoleDefaultPolicyE9EBAF22
      - submitQueryLambdaServiceRole1F179ADE
    Metadata:
      aws:cdk:path: backend/submitQueryLambda/Resource
      aws:asset:path: asset.fcc7fe468dfa3d71f02725c0e9bc71881e005e2a266446731c3a426fe2cb414c
      aws:asset:property: Code
  volunteerAppplicationLambdaServiceRole6D670722:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: backend/volunteerAppplicationLambda/ServiceRole/Resource
  volunteerAppplicationLambdaServiceRoleDefaultPolicyA3E232FC:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - volunteersTableE6E8448C
                  - Arn
              - Ref: AWS::NoValue
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:GetItem
              - dynamodb:Scan
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - volunteersTableE6E8448C
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: volunteerAppplicationLambdaServiceRoleDefaultPolicyA3E232FC
      Roles:
        - Ref: volunteerAppplicationLambdaServiceRole6D670722
    Metadata:
      aws:cdk:path: backend/volunteerAppplicationLambda/ServiceRole/DefaultPolicy/Resource
  volunteerAppplicationLambda2C47B4DA:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters1250f98b954c5f221095d44e8d5c452fae97042b773f346a1f1159d1b4e495a4S3BucketE002E31E
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters1250f98b954c5f221095d44e8d5c452fae97042b773f346a1f1159d1b4e495a4S3VersionKey6DDD3640
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters1250f98b954c5f221095d44e8d5c452fae97042b773f346a1f1159d1b4e495a4S3VersionKey6DDD3640
      Handler: app.lambda_handler
      Role:
        Fn::GetAtt:
          - volunteerAppplicationLambdaServiceRole6D670722
          - Arn
      Runtime: python3.8
      Environment:
        Variables:
          TABLE_NAME:
            Ref: volunteersTableE6E8448C
    DependsOn:
      - volunteerAppplicationLambdaServiceRoleDefaultPolicyA3E232FC
      - volunteerAppplicationLambdaServiceRole6D670722
    Metadata:
      aws:cdk:path: backend/volunteerAppplicationLambda/Resource
      aws:asset:path: asset.1250f98b954c5f221095d44e8d5c452fae97042b773f346a1f1159d1b4e495a4
      aws:asset:property: Code
  getrehomersLambdaServiceRoleDF0B7783:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: backend/getrehomersLambda/ServiceRole/Resource
  getrehomersLambda4BC84E0D:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParametersf8d34edda88bddec6150c2bf6ad20d41c5851b780b04e4129f0844d2f1965d3aS3BucketA8BF7A8B
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersf8d34edda88bddec6150c2bf6ad20d41c5851b780b04e4129f0844d2f1965d3aS3VersionKey2433B33B
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersf8d34edda88bddec6150c2bf6ad20d41c5851b780b04e4129f0844d2f1965d3aS3VersionKey2433B33B
      Handler: app.lambda_handler
      Role:
        Fn::GetAtt:
          - getrehomersLambdaServiceRoleDF0B7783
          - Arn
      Runtime: python3.8
      Environment:
        Variables:
          TABLE_NAME:
            Ref: rehomersTableD4C9D2D2
          ShouldBeAuth: "true"
    DependsOn:
      - getrehomersLambdaServiceRoleDF0B7783
    Metadata:
      aws:cdk:path: backend/getrehomersLambda/Resource
      aws:asset:path: asset.f8d34edda88bddec6150c2bf6ad20d41c5851b780b04e4129f0844d2f1965d3a
      aws:asset:property: Code
  getQueriesLambdaServiceRole72090634:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: backend/getQueriesLambda/ServiceRole/Resource
  getQueriesLambda5C5511AF:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParametersf8d34edda88bddec6150c2bf6ad20d41c5851b780b04e4129f0844d2f1965d3aS3BucketA8BF7A8B
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersf8d34edda88bddec6150c2bf6ad20d41c5851b780b04e4129f0844d2f1965d3aS3VersionKey2433B33B
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersf8d34edda88bddec6150c2bf6ad20d41c5851b780b04e4129f0844d2f1965d3aS3VersionKey2433B33B
      Handler: app.lambda_handler
      Role:
        Fn::GetAtt:
          - getQueriesLambdaServiceRole72090634
          - Arn
      Runtime: python3.8
      Environment:
        Variables:
          TABLE_NAME:
            Ref: queriesTableC1676847
          ShouldBeAuth: "true"
    DependsOn:
      - getQueriesLambdaServiceRole72090634
    Metadata:
      aws:cdk:path: backend/getQueriesLambda/Resource
      aws:asset:path: asset.f8d34edda88bddec6150c2bf6ad20d41c5851b780b04e4129f0844d2f1965d3a
      aws:asset:property: Code
  getVolunteersLambdaServiceRoleF7FBEA9A:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: backend/getVolunteersLambda/ServiceRole/Resource
  getVolunteersLambdaD2D53843:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParametersf8d34edda88bddec6150c2bf6ad20d41c5851b780b04e4129f0844d2f1965d3aS3BucketA8BF7A8B
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersf8d34edda88bddec6150c2bf6ad20d41c5851b780b04e4129f0844d2f1965d3aS3VersionKey2433B33B
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersf8d34edda88bddec6150c2bf6ad20d41c5851b780b04e4129f0844d2f1965d3aS3VersionKey2433B33B
      Handler: app.lambda_handler
      Role:
        Fn::GetAtt:
          - getVolunteersLambdaServiceRoleF7FBEA9A
          - Arn
      Runtime: python3.8
      Environment:
        Variables:
          TABLE_NAME:
            Ref: volunteersTableE6E8448C
          ShouldBeAuth: "true"
    DependsOn:
      - getVolunteersLambdaServiceRoleF7FBEA9A
    Metadata:
      aws:cdk:path: backend/getVolunteersLambda/Resource
      aws:asset:path: asset.f8d34edda88bddec6150c2bf6ad20d41c5851b780b04e4129f0844d2f1965d3a
      aws:asset:property: Code
  websiteBucket74B0F9E5:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: www.leighrescuecentre.co.uk
      CorsConfiguration:
        CorsRules:
          - AllowedMethods:
              - GET
              - PUT
              - HEAD
              - POST
              - DELETE
            AllowedOrigins:
              - "*"
      WebsiteConfiguration:
        IndexDocument: index.html
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: backend/websiteBucket/Resource
  websiteBucketPolicy112A7E46:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: websiteBucket74B0F9E5
      PolicyDocument:
        Statement:
          - Action: s3:GetObject
            Effect: Allow
            Principal: "*"
            Resource:
              Fn::Join:
                - ""
                - - Fn::GetAtt:
                      - websiteBucket74B0F9E5
                      - Arn
                  - /*
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: backend/websiteBucket/Policy/Resource
  imagesBucketF1A776CF:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: media.leighrescuecentre.co.uk
      CorsConfiguration:
        CorsRules:
          - AllowedMethods:
              - GET
              - PUT
              - HEAD
              - POST
              - DELETE
            AllowedOrigins:
              - "*"
      WebsiteConfiguration:
        IndexDocument: index.html
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: backend/imagesBucket/Resource
  imagesBucketPolicy5807A195:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: imagesBucketF1A776CF
      PolicyDocument:
        Statement:
          - Action: s3:GetObject
            Effect: Allow
            Principal: "*"
            Resource:
              Fn::Join:
                - ""
                - - Fn::GetAtt:
                      - imagesBucketF1A776CF
                      - Arn
                  - /*
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: backend/imagesBucket/Policy/Resource
  websiteBucketDistributionCFDistributionB07284B0:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
          CachedMethods:
            - GET
            - HEAD
          Compress: true
          ForwardedValues:
            Cookies:
              Forward: none
            QueryString: false
          TargetOriginId: origin1
          ViewerProtocolPolicy: redirect-to-https
        DefaultRootObject: index.html
        Enabled: true
        HttpVersion: http2
        IPV6Enabled: true
        Origins:
          - DomainName:
              Fn::GetAtt:
                - websiteBucket74B0F9E5
                - RegionalDomainName
            Id: origin1
            S3OriginConfig: {}
        PriceClass: PriceClass_100
        ViewerCertificate:
          CloudFrontDefaultCertificate: true
    Metadata:
      aws:cdk:path: backend/websiteBucketDistribution/CFDistribution
  deployStaticWebsiteCustomResource73B4205E:
    Type: Custom::CDKBucketDeployment
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536
          - Arn
      SourceBucketNames:
        - Ref: AssetParametersc3ffd52a83c119b60c5793cc7fad9b917e40ed24317dfd9715e24f4501fde730S3Bucket01D49D18
      SourceObjectKeys:
        - Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersc3ffd52a83c119b60c5793cc7fad9b917e40ed24317dfd9715e24f4501fde730S3VersionKey466AB3AE
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersc3ffd52a83c119b60c5793cc7fad9b917e40ed24317dfd9715e24f4501fde730S3VersionKey466AB3AE
      DestinationBucketName:
        Ref: websiteBucket74B0F9E5
      DistributionId:
        Ref: websiteBucketDistributionCFDistributionB07284B0
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: backend/deployStaticWebsite/CustomResource/Default
  CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: backend/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/Resource
  CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
            Effect: Allow
            Resource:
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":s3:::"
                    - Ref: AssetParametersc3ffd52a83c119b60c5793cc7fad9b917e40ed24317dfd9715e24f4501fde730S3Bucket01D49D18
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":s3:::"
                    - Ref: AssetParametersc3ffd52a83c119b60c5793cc7fad9b917e40ed24317dfd9715e24f4501fde730S3Bucket01D49D18
                    - /*
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
              - s3:DeleteObject*
              - s3:PutObject*
              - s3:Abort*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - websiteBucket74B0F9E5
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - websiteBucket74B0F9E5
                        - Arn
                    - /*
          - Action:
              - cloudfront:GetInvalidation
              - cloudfront:CreateInvalidation
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF
      Roles:
        - Ref: CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265
    Metadata:
      aws:cdk:path: backend/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/DefaultPolicy/Resource
  CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParametersa9125fa9a40550c71cde90bd478cc23091e868067a12380c1df0827d013ad2ffS3Bucket848A1F31
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersa9125fa9a40550c71cde90bd478cc23091e868067a12380c1df0827d013ad2ffS3VersionKey983DBE96
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersa9125fa9a40550c71cde90bd478cc23091e868067a12380c1df0827d013ad2ffS3VersionKey983DBE96
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265
          - Arn
      Runtime: python3.6
      Timeout: 900
    DependsOn:
      - CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF
      - CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265
    Metadata:
      aws:cdk:path: backend/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/Resource
      aws:asset:path: asset.a9125fa9a40550c71cde90bd478cc23091e868067a12380c1df0827d013ad2ff.zip
      aws:asset:property: Code
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Modules: aws-cdk=1.51.0,@aws-cdk/assets=1.45.0,@aws-cdk/aws-apigateway=1.45.0,@aws-cdk/aws-applicationautoscaling=1.45.0,@aws-cdk/aws-autoscaling-common=1.45.0,@aws-cdk/aws-certificatemanager=1.45.0,@aws-cdk/aws-cloudformation=1.45.0,@aws-cdk/aws-cloudfront=1.49.0,@aws-cdk/aws-cloudwatch=1.45.0,@aws-cdk/aws-dynamodb=1.45.0,@aws-cdk/aws-ec2=1.45.0,@aws-cdk/aws-elasticloadbalancingv2=1.45.0,@aws-cdk/aws-events=1.45.0,@aws-cdk/aws-iam=1.45.0,@aws-cdk/aws-kms=1.45.0,@aws-cdk/aws-lambda=1.45.0,@aws-cdk/aws-logs=1.45.0,@aws-cdk/aws-route53=1.45.0,@aws-cdk/aws-s3=1.45.0,@aws-cdk/aws-s3-assets=1.45.0,@aws-cdk/aws-s3-deployment=1.49.0,@aws-cdk/aws-sns=1.45.0,@aws-cdk/aws-sqs=1.45.0,@aws-cdk/aws-ssm=1.45.0,@aws-cdk/cdk-assets-schema=1.45.0,@aws-cdk/cloud-assembly-schema=1.45.0,@aws-cdk/core=1.45.0,@aws-cdk/custom-resources=1.45.0,@aws-cdk/cx-api=1.45.0,@aws-cdk/region-info=1.45.0,jsii-runtime=Python/3.8.3
    Condition: CDKMetadataAvailable
Outputs:
  rescueCentreAPIEndpoint9D33F3B0:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: rescueCentreAPID8DB9A2C
          - .execute-api.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /
          - Ref: rescueCentreAPIDeploymentStageprodF4DDB93C
          - /
Parameters:
  AssetParameterse5803fcc31a5d70c4603ae658af2907cde996d41c37b5604dfb096440412e739S3Bucket4B75D0BA:
    Type: String
    Description: S3 bucket for asset "e5803fcc31a5d70c4603ae658af2907cde996d41c37b5604dfb096440412e739"
  AssetParameterse5803fcc31a5d70c4603ae658af2907cde996d41c37b5604dfb096440412e739S3VersionKey1C426AE0:
    Type: String
    Description: S3 key for asset version "e5803fcc31a5d70c4603ae658af2907cde996d41c37b5604dfb096440412e739"
  AssetParameterse5803fcc31a5d70c4603ae658af2907cde996d41c37b5604dfb096440412e739ArtifactHashB2632974:
    Type: String
    Description: Artifact hash for asset "e5803fcc31a5d70c4603ae658af2907cde996d41c37b5604dfb096440412e739"
  AssetParametersf8d34edda88bddec6150c2bf6ad20d41c5851b780b04e4129f0844d2f1965d3aS3BucketA8BF7A8B:
    Type: String
    Description: S3 bucket for asset "f8d34edda88bddec6150c2bf6ad20d41c5851b780b04e4129f0844d2f1965d3a"
  AssetParametersf8d34edda88bddec6150c2bf6ad20d41c5851b780b04e4129f0844d2f1965d3aS3VersionKey2433B33B:
    Type: String
    Description: S3 key for asset version "f8d34edda88bddec6150c2bf6ad20d41c5851b780b04e4129f0844d2f1965d3a"
  AssetParametersf8d34edda88bddec6150c2bf6ad20d41c5851b780b04e4129f0844d2f1965d3aArtifactHash69C3EEE6:
    Type: String
    Description: Artifact hash for asset "f8d34edda88bddec6150c2bf6ad20d41c5851b780b04e4129f0844d2f1965d3a"
  AssetParametersfcc7fe468dfa3d71f02725c0e9bc71881e005e2a266446731c3a426fe2cb414cS3BucketFD41C197:
    Type: String
    Description: S3 bucket for asset "fcc7fe468dfa3d71f02725c0e9bc71881e005e2a266446731c3a426fe2cb414c"
  AssetParametersfcc7fe468dfa3d71f02725c0e9bc71881e005e2a266446731c3a426fe2cb414cS3VersionKeyCADBEB77:
    Type: String
    Description: S3 key for asset version "fcc7fe468dfa3d71f02725c0e9bc71881e005e2a266446731c3a426fe2cb414c"
  AssetParametersfcc7fe468dfa3d71f02725c0e9bc71881e005e2a266446731c3a426fe2cb414cArtifactHashB8AA45C3:
    Type: String
    Description: Artifact hash for asset "fcc7fe468dfa3d71f02725c0e9bc71881e005e2a266446731c3a426fe2cb414c"
  AssetParameters1250f98b954c5f221095d44e8d5c452fae97042b773f346a1f1159d1b4e495a4S3BucketE002E31E:
    Type: String
    Description: S3 bucket for asset "1250f98b954c5f221095d44e8d5c452fae97042b773f346a1f1159d1b4e495a4"
  AssetParameters1250f98b954c5f221095d44e8d5c452fae97042b773f346a1f1159d1b4e495a4S3VersionKey6DDD3640:
    Type: String
    Description: S3 key for asset version "1250f98b954c5f221095d44e8d5c452fae97042b773f346a1f1159d1b4e495a4"
  AssetParameters1250f98b954c5f221095d44e8d5c452fae97042b773f346a1f1159d1b4e495a4ArtifactHashCFD236A1:
    Type: String
    Description: Artifact hash for asset "1250f98b954c5f221095d44e8d5c452fae97042b773f346a1f1159d1b4e495a4"
  AssetParametersa9125fa9a40550c71cde90bd478cc23091e868067a12380c1df0827d013ad2ffS3Bucket848A1F31:
    Type: String
    Description: S3 bucket for asset "a9125fa9a40550c71cde90bd478cc23091e868067a12380c1df0827d013ad2ff"
  AssetParametersa9125fa9a40550c71cde90bd478cc23091e868067a12380c1df0827d013ad2ffS3VersionKey983DBE96:
    Type: String
    Description: S3 key for asset version "a9125fa9a40550c71cde90bd478cc23091e868067a12380c1df0827d013ad2ff"
  AssetParametersa9125fa9a40550c71cde90bd478cc23091e868067a12380c1df0827d013ad2ffArtifactHash08605F5E:
    Type: String
    Description: Artifact hash for asset "a9125fa9a40550c71cde90bd478cc23091e868067a12380c1df0827d013ad2ff"
  AssetParametersc3ffd52a83c119b60c5793cc7fad9b917e40ed24317dfd9715e24f4501fde730S3Bucket01D49D18:
    Type: String
    Description: S3 bucket for asset "c3ffd52a83c119b60c5793cc7fad9b917e40ed24317dfd9715e24f4501fde730"
  AssetParametersc3ffd52a83c119b60c5793cc7fad9b917e40ed24317dfd9715e24f4501fde730S3VersionKey466AB3AE:
    Type: String
    Description: S3 key for asset version "c3ffd52a83c119b60c5793cc7fad9b917e40ed24317dfd9715e24f4501fde730"
  AssetParametersc3ffd52a83c119b60c5793cc7fad9b917e40ed24317dfd9715e24f4501fde730ArtifactHashEBF9A459:
    Type: String
    Description: Artifact hash for asset "c3ffd52a83c119b60c5793cc7fad9b917e40ed24317dfd9715e24f4501fde730"
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

